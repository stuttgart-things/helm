---
template:
  gha-runner-scale-set: | # pragma: allowlist secret
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - namespace: arc-runner
          - githubRepoUrl: https://github.com/stuttgart-things/ansible
          - githubToken: ""
          - storageAccessMode: ReadWriteOnce
          - storageClassName: openebs
          - storageRequest: 50Mi
          - runnerVersion: 2.323.0
          - ghaControllerNamespace: arc-systems
          - ghaControllerServiceAccount: gha-runner-scale-set-controller-gha-rs-controller

  gha-runner-controller: | # pragma: allowlist secret
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - namespace: arc-systems

  harbor: | # pragma: allowlist secret
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - namespace: harbor
          - enablePersistence: true
          - storageClass: {{ .storageClass }}
          - issuerName: selfsigned
          - issuerKindCert: ClusterIssuer
          - issuerKind: cluster-issuer
          - hostname: harbor
          - domain: {{ .domain }}
          - ingressClassName: nginx
          - adminPassword: halloHarborTest123
          - pvSizeRegistry: 12Gi
          - pvSizeTrivy: 5Gi
          - pvSizeJobService: 1Gi

  postgres: | # pragma: allowlist secret
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - namespace: backstage

  velero: | # pragma: allowlist secret
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - namespace: velero
          - backupsEnabled: true
          - snapshotsEnabled: true
          - deployNodeAgent: true
          - s3StorageLocation: default
          - awsAccessKeyID: adminadmin
          - awsSecretAccessKey: adminadmin
          - s3Bucket: velero
          - s3CaCert: ""
          - s3Location: artifacts.172.18.0.2.nip.io
          - imageAwsVeleroPlugin: velero/velero-plugin-for-aws:v1.11.1

  minio: | # pragma: allowlist secret
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - namespace: minio
          - clusterIssuer: selfsigned
          - issuerKind: cluster-issuer
          - domain: {{ .domain }}
          - ingressClassName: nginx
          - rootUser: adminadmin
          - rootPassword: adminadmin
          - hostnameConsole: artifacts-console
          - hostnameApi: artifacts
          - storageClass: standard

  argocd: | # pragma: allowlist secret
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - namespace: argocd
          - clusterIssuer: selfsigned
          - issuerKind: cluster-issuer
          - hostname: argocd
          - domain: {{ .domain }}
          - ingressClassName: nginx
          - adminPassword: $2y$10$KOXdF6FFG1oMnFTAVB16Ceb2T82vop87IMTRzdYTwOdrUreR6GiS2
          - adminPasswordMTime: 2025-03-19T05:24:39UTC
          - enableAvp: false

  vault: | # pragma: allowlist secret
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - namespace: vault
          - injectorEnabled: true
          - clusterIssuer: selfsigned
          - issuerKind: cluster-issuer
          - hostname: vault
          - domain: {{ .domain }}
          - ingressClassName: nginx

  rancher: | # pragma: allowlist secret
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - namespace: cattle-system
          - hostname: rancher-things
          - domain: {{ .domain }}
          - bootstrapPassword: ref+vault://apps/rancher/password
          - cacerts: ref+vault://apps/awx/cabundle

  komoplane: | # pragma: allowlist secret
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - namespace: crossplane-system
          - clusterIssuer: selfsigned
          - issuerKind: cluster-issuer
          - hostname: komoplane
          - domain: {{ .domain }}
          - ingressClassName: nginx

  clusterbook: | # pragma: allowlist secret
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - namespace: clusterbook
            enableIngress: true
            enableCertificateRequest: true
            ingressDomain: 172.18.0.5.nip.io
            issuerKind: ClusterIssuer
            issuerName: selfsigned
            imageTag: v1.5.0 # pragma: allowlist secret
            hostname: clusterbook
            tlsSecretName: clusterbook-ingress-tls # pragma: allowlist secret
            app: clusterbook

  tekton: | # pragma: allowlist secret
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - namespace: tekton-pipelines

  crossplane: | # pragma: allowlist secret
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - namespace: crossplane-system
          - providers:
              - xpkg.upbound.io/crossplane-contrib/provider-helm:v0.20.4
              - xpkg.upbound.io/crossplane-contrib/provider-kubernetes:v0.17.1
          - terraform:
              configName: tf-provider
              image: ghcr.io/stuttgart-things/images/sthings-cptf:1.11.2
              package: xpkg.upbound.io/upbound/provider-terraform
              version: v0.20.0
              poll: 10m
              reconcileRate: 10
              s3SecretName: s3
          - secrets:
              s3:
                namespace: crossplane-system
                kvs:
                  AWS_ACCESS_KEY_ID: ref+vault://apps/artifacts/accessKey
                  AWS_SECRET_ACCESS_KEY: ref+vault://apps/artifacts/secretKey

  awx: | # pragma: allowlist secret
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - namespace: awx
          - app: awx
          - ingressType: ingress
          - postgresStorageClass: {{ .storageClass }}
          - projectStorageClass: {{ .storageClass }}
          - clusterIssuer: {{ .clusterIssuer }}
          - secrets:
              sthings-admin-password:
                namespace: awx
                kvs:
                  password: ref+vault://apps/awx/password-dev
              sthings-custom-certs:
                namespace: awx
                kvs:
                  bundle-ca.crt: ref+vault://apps/awx/cabundle

          - instances:
              dev:
                name: awx-dev
                namespace: awx
                adminUser: sthings
                adminPasswordSecret: sthings-admin-password
                bundleCacertSecret: sthings-custom-certs
                hostname: awx-dev
                domain: {{ .domain }}
                ingressClassName: nginx
                ingressSecret: awx-dev
                postgresStorageLimits: 8Gi
                postgresStorageRequest: 1Gi
                projectPersistence: false
                projectsStorageAccessMode: ReadWriteOnce
                fsGroupChangePolicy: OnRootMismatch

  awx-operator: |
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - namespace: awx

  grafana: |
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - ingressEnabled: true
          - hostname: grafana
          - domain: 172.18.0.2.nip.io
          - enablePersistence: false
          - clusterIssuer: selfsigned
          - issuerKind: ClusterIssuer
          - tls: grafana.172.10.10.12.nip.io-tls # tlsSecretName

  metrics-server: |
    ---
    helmfiles:
      - path: {{ .source }}

  nfs-server-provisioner: |
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - version: 1.8.0

  cilium: |
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - config: kind
          - clusterName: helm-dev
          - ipRangeStart: 172.18.250.0
          - ipRangeEnd: 172.18.250.50

  metallb: |
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - version: 6.4.5
          - ipRange: 10.31.103.4-10.31.103.4 # EXAMPLE RANGE

  nginx: |
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - namespace: nginx
          - profile: nginx
          - serviceType: ClusterIP
          - enableIngress: true
          - clusterIssuer: selfsigned
          - issuerKind: cluster-issuer
          - hostname: web
          - domain: {{ .domain }}
          - ingressClassName: nginx

  cert-manager: |
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - version: v1.17.1
          - config: selfsigned

  ingress-nginx: |
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - version: 4.12.0

  keycloak: |
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - ingressClassName: nginx
          - hostname: keycloak.dev3
          - domain: 172.18.0.1.nip.io
          - adminUser: admin
          - adminPassword: <password> # pragma: allowlist secret
          - storageClass: <your-storage-class>
          - clusterIssuer: cluster-issuer-approle
          - issuerKind: ClusterIssuer

  openldap: | # pragma: allowlist secret
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - adminUser: admin
          - adminPassword: whatever4711 # pragma: allowlist secret
          - ldapDomain: dc=sthings,dc=de
          - configUser: sthings
          - configPassword: whatever0815 # pragma: allowlist secret
          - enablePersistence: false
          #- storageClass: longhorn # -> only needed if enablePersistence is true
          - replicas: 1
          - replication: false

  openebs: |
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - version: 4.2.0
          - profile: localpv
          - openebs_volumesnapshots_enabled: false
          - openebs_csi_node_init_containers_enabled: false
          - openebs_local_lvm_enabled: false
          - openebs_local_zfs_enabled: false
          - openebs_replicated_mayastor_enabled: false

  zot: |
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - version: 0.1.66
          - ingressEnabled: true
          - ingressClass: nginx
          - enablePersistence: true
          - hostname: zot
          - domain: k8scluster.sthings-vsphere.example.com
          - storageClassName: {{ .zotStorageClass }}
          - storageSize: {{ .zotStorageSize }}
          - clusterIssuer: cluster-issuer-approle
          - issuerKind: ClusterIssuer

  postgresql: |
    ---
    helmfiles:
      - path: {{ .source }}
        values:
          - username: admin
          - password: <admin-user-pw> # pragma: allowlist secret
          - database: myexample_db
          - postgresPassword: <postgres-user-pw> # pragma: allowlist secret
          - persistenceEnabled: true
          - persistenceSize: 1
          - storageClass: standard
