---
gitea:
{{- if .Values.enableOauth }}
  oauth:
    - name: "{{ .Values.oauthName }}"
      provider: "{{ .Values.oauthProvider }}"
      key: "{{ .Values.oauthKey }}"
      secret: "{{ .Values.oauthSecret }}"
      autoDiscoverUrl: "{{ .Values.oauthAutoDiscoverUrl }}"
      scopes: "{{ .Values.oauthScopes }}"
      groupClaimName: "{{ .Values.oauthGroupClaimName }}"
      adminGroup: "{{ .Values.oauthAdminGroup }}"
{{- end }}

  config:
{{- if .Values.enableOauth }}
    oauth2_client:
      ENABLE_AUTO_REGISTRATION: {{ .Values.oauthEnableAutoRegistration }}
      ACCOUNT_LINKING: {{ .Values.oauthAccountLinking }}
{{- end }}

    server:
      DOMAIN: {{ .Values.serverDomain }}
      {{- if hasKey .Values "nodePortHttp" }}
      HTTP_PORT: "{{ .Values.nodePortHttp }}"
      {{- end }}
      ROOT_URL: {{ .Values.rootUrl }}

    webhook:
      ALLOWED_HOST_LIST: "{{ .Values.webhookAllowList }}"

  admin:
    username: {{ .Values.adminUser }}
    password: {{ .Values.adminPassword }}
    email: "{{ .Values.adminUser }}@local.domain"
    passwordMode: {{ .Values.adminPasswordMode }}

postgresql-ha:
  enabled: false

postgresql:
  enabled: true

valkey-cluster:
  enabled: false

valkey:
  enabled: true

service:
  http:
    type: {{ .Values.httpServiceType }}
    {{- if hasKey .Values "nodePortHttp" }}
    nodePort: {{ .Values.nodePortHttp }}
    {{- end }}

{{- if .Values.enableIngress }}
ingress:
  enabled: {{ .Values.enableIngress }}
  ingressClassName: {{ .Values.ingressClassName }}
  annotations:
    cert-manager.io/{{ .Values.issuerKind }}: "{{ .Values.clusterIssuer }}"
  hosts:
    - host: {{ .Values.hostname }}.{{ .Values.domain }}
      paths:
        - path: /
  tls:
    - secretName: {{ .Values.hostname }}.{{ .Values.domain }}-tls
      hosts:
        - {{ .Values.hostname }}.{{ .Values.domain }}
{{- end }}

persistence:
  enabled: {{ .Values.persistenceEnabled }}
  size: {{ .Values.persistenceSize }}
  accessModes: {{ .Values.persistenceAccessModes | toYaml | nindent 4 }}
  storageClass: {{ .Values.storageClass }}
